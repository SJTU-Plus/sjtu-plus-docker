version: "3"
services:
  sjtu-plus:
    restart: always
    networks:
      - wsgi_net
      - plus_net
    build: ./sjtu-plus
    image: sjtu-plus/sjtu-plus:1.0
    expose:
      - 5000
    env_file:
      - ./secrets/postgres-db.env
      - ./secrets/sjtu-plus.env
    volumes:
      - "./statics/static:/data"
      - "./sjtu-plus:/root/app"
    depends_on:
      - postgres-db

  caddy:
    restart: always
    networks: 
      - wsgi_net
    build: ./caddy
    volumes:
      - "./statics:/srv:ro"
    depends_on: 
      - sjtu-plus
    ports: 
      - 80:80
      - 443:443
    
  sjtu-traffic-exporter:
    restart: always
    networks:
      - prometheus_net
      - wsgi_net
    build: ./services/sjtu_traffic_exporter
    environment:
      - PLUS_HOST=sjtu-plus.internal
    external_links:
      - "caddy:sjtu-plus.internal"
    depends_on:
      - caddy
    expose:
      - 9142
    
  prometheus:
    image: prom/prometheus
    user: root
    command: --config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/data/prometheus
    networks:
      - prometheus_net
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./data:/data"
    depends_on:
      - sjtu-traffic-exporter
    expose:
      - 9090
    restart: always
  
  postgres-db:
    image: postgres
    networks:
      - plus_net
    expose:
      - 5432
    restart: always
    env_file:
      - ./secrets/postgres-db.env
    environment:
      - PGDATA=/data/database
    volumes:
      - "./data:/data"
  
  grafana:
    image: grafana/grafana
    user: root
    networks:
      - wsgi_net
      - prometheus_net
    environment:
      - GF_PATHS_DATA=/data/grafana
    volumes:
      - "./data:/data"
      - "./grafana.ini:/etc/grafana/grafana.ini"
    depends_on:
      - prometheus
    expose:
      - 3000
    restart: always

networks:
  wsgi_net:
  plus_net:
  prometheus_net:
